package com.jptest.payments.fulfillment.testonia.business.util;

import com.jptest.payments.fulfillment.testonia.core.util.xml.XMLHelper;
import org.testng.annotations.Test;
import org.mockito.Mock;
import org.testng.Assert;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import javax.inject.Inject;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/**
@JP Inc.
 */
public class SettlementValidationXMLBuilderTest {

    @Test
    public void testSpmToXmlConverter() throws IOException, ParserConfigurationException, TransformerException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String simplePaymentMessageString = "simple_payment_message { context { payment_context { channel_context { point_of_service_data { terminal_context { pin_entry_capabilities: UNKNOWN network_international_id: \"NONE\" } entry_mode: UNKNOWN } } product_configuration { channel_partner: jpinc } } purchase_context { items { item_number: \"447343774349\" } } transaction_context { parent_transaction_details { } remittance_details { } creation_time { time_in_millis: 1494880885000 } transaction_activity_id: \"19022693624154915\" } } payment_instruction { amount { type: CURRENCY code: \"USD\" coefficient: 358 exponent: -2 } backing_instrument { type: STORED_VALUE stored_value { currency_code: \"USD\" stored_value_id: \"381988\" unencrypted_balance_account_id: \"1715564783971565582\" sub_balance_type: AVAILABLE legacy_balance_constructs { legal_entity: \"I\" user_account_number: \"1715564783971565582\" } } } allow_closed_instrument: true type: CREDIT instrument_holder { user_id { account_number: \"1715564783971565582\" email_address: \"dev-us-b1@jptest.com\" encrypted_user_id: \"5AC9MKJVD56WY\" client_id: \"1715564783971565582\" } personal_details { name { first_name: \"Monica\" last_name: \"Ishibashi\" alternate_full_name: \"Joe\\'s Generic Business\" } phone_info { country_code: \"1\" type: HOME national_number: \"3012158401\" } phone_info { country_code: \"1\" type: MOBILE national_number: \"7146735723\" } phone_info { country_code: \"1\" type: WORK national_number: \"5175472415\" } address { address_id: \"328723\" line1: \"58267 West 54th Street\" line2: \"3113 Main Street\" city: \"Summit\" state_province: \"NJ\" postal_code: \"07901\" country_code: \"US\" primary: true active: true } full_name: \"Monica Ishibashi\" preferred_language: \"en_US\" } business_details { business_name: \"Joe\\'s Generic Business\" statement_name: \"JOESGENERIC\" } processing_preferences { } jptest_account_details { account_type: BUSINESS } } reference_transaction_id: \"19022693624154926\" instruction_id: \"19022693624154926\" instruction_context { participant_transaction_id: \"19022693624154915:22:FSM:1\" } } payment_instruction { amount { type: CURRENCY code: \"USD\" coefficient: 400 exponent: -2 } funding_method: IACH backing_instrument { type: BANK backing_instrument_id: \"1300105\" bank_account { bank_id: \"BA1300105\" bank_account_type: SAVINGS last_n_chars: \"6073\" account_name: \"Kirsten\" currency_code: \"USD\" first_name: \"Kirsten\" last_name: \"Henry\" billing_address { address_id: \"6797460185978964077\" line1: \"418140 Stout Drive\" line2: \"2276837 S Highway 77\" city: \"Oxford\" state_province: \"ME\" postal_code: \"04270\" country_code: \"US\" primary: true active: true } bank_issuer { country_code: \"US\" name: \"Bank of America\" } status { reason: NOT_APPLICABLE time_added { time_in_millis: 1483741091 } time_modified { } } authorization_status: AUTHORIZED auth_capture_timestamp { time_in_millis: 1483741094 } unencrypted_bank_id: \"BA1300105\" bank_account_identifiers { name: BBAN_ENCRYPTED value: \"ABcLOQcaRXoQg4eLd0a6IArYhO21S8Xl3gq5lY3NNAWCMtfcCaLI4qeQu6f3-J26Njc\" } bank_account_identifiers { name: BBAN_HMAC value: \"B6kdh.zhskubQk57owxWPR36bdI\" } bank_account_identifiers { name: NORMAL_ENCRYPTED value: \"ABcLOQcaRXoQg4eLd0a6IArYhO21S8Xl3gq5lY3NNAWCMtfcCaLI4qeQu6f3-J26Njc\" } bank_account_identifiers { name: IBAN_ENCRYPTED value: \"ABcLOQcaRXoQg4eLd0a6IArYhO21S8Xl3gq5lY3NNAWCMtfcCaLI4qeQu6f3-J26Njc\" } bank_identifiers { name: ROUTING_NUMBER_1 value: \"081500875\" } account_handle: \"1300105\" mandate { mandate_sign_time { time_in_millis: 1483741094000 } } } } payment_instruction_response { status_info { payment_instruction_status_info: APPROVED } processor_response { processor_transmission_time { } } instruction_status: SUCCESS } estimated_clearing_date { time_in_millis: 1495090800000 } instruction_handle: \"6848495392775400957\" tenant_transaction_id: \"19022693624154915:12:FSM\" processor_context { processor_id: \"PROCESSOR_ID_WELLS\" routing_entity: \"ROUTING_ENTITY_UNITED_STATES_PMT_ASSN\" processor_timeout_milliseconds: 19000 } acquirer_context { } type: FINANCIAL_AUTHORIZATION instrument_holder { user_id { account_number: \"1700924061694679339\" email_address: \"us_pad_msp@jptest.com\" encrypted_user_id: \"9DYEHBJ566Y94\" client_id: \"1700924061694679339\" } personal_details { name { first_name: \"Kirsten\" last_name: \"Henry\" } phone_info { country_code: \"1\" type: HOME national_number: \"2078628932\" } phone_info { country_code: \"1\" type: MOBILE national_number: \"2077303974\" } phone_info { country_code: \"1\" type: WORK national_number: \"2079043627\" } address { address_id: \"6844100919404687356\" addressee_name: \"Kirsten Henry\" line1: \"418140 Stout Drive\" line2: \"2276837 S Highway 77\" city: \"Oxford\" state_province: \"ME\" postal_code: \"04270\" country_code: \"US\" active: true } birth_date { } full_name: \"Kirsten Henry\" preferred_language: \"en_US\" } business_details { statement_name: \"USPADMSP\" } processing_preferences { } jptest_account_details { account_type: PREMIER } } counter_party { user_id { account_number: \"1715564783971565582\" email_address: \"dev-us-b1@jptest.com\" encrypted_user_id: \"5AC9MKJVD56WY\" client_id: \"1715564783971565582\" } personal_details { name { first_name: \"Monica\" last_name: \"Ishibashi\" alternate_full_name: \"JOESGENERIC\" } phone_info { country_code: \"1\" type: HOME national_number: \"3012158401\" } phone_info { country_code: \"1\" type: MOBILE national_number: \"7146735723\" } phone_info { country_code: \"1\" type: WORK national_number: \"5175472415\" } address { address_id: \"328723\" line1: \"58267 West 54th Street\" line2: \"3113 Main Street\" city: \"Summit\" state_province: \"NJ\" postal_code: \"07901\" country_code: \"US\" primary: true active: true } full_name: \"Monica Ishibashi\" preferred_language: \"en_US\" } business_details { business_name: \"Joe\\'s Generic Business\" soft_descriptor: \"JOESGENERIC\" statement_name: \"JOESGENERIC\" } processing_preferences { } jptest_account_details { account_type: BUSINESS } } usd_amount { type: CURRENCY code: \"USD\" coefficient: 400 exponent: -2 } reference_transaction_id: \"19022693624154921\" facilitator { business_details { business_name: \"jptest\" } } instruction_id: \"19022693624154918\" installment_details { } instruction_context { processed_time { time_in_millis: 1494880886580 } participant_transaction_id: \"19022693624154915:12:FSM\" } } } amqp_header { idempotency_key: \"19022693624154915:22:FSM\" facilitator_id: jptest }";

        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(new XMLHelper());
        Method privateMethod = settlementValidationXMLBuilder.getClass().getDeclaredMethod("getXmlFromSpm", String.class);
        privateMethod.setAccessible(true);
        Document result = (Document) privateMethod.invoke(settlementValidationXMLBuilder, simplePaymentMessageString);

        //SettlementValidationXMLBuilder.spmToXmlConverter(simplePaymentMessageString);
    }

    @Test
    public void testSpmToXmlConverterWithLedger() throws IOException, ParserConfigurationException, TransformerException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String simplePaymentMessageString = "simple_payment_message { context { payment_context { payment_tracking_id: \"55555555555\" product_configuration { tenant: jptest sender_type: MEMBER business_application: FUND_TRANSFERS payments_acceptance_solution: PAYOUTS payments_acceptance_solution_category: MASSPAY payments_schedule: ONE_TIME_PAYMENT payment_services_category: RESERVE_FUNDS senderCountry: \"*\" receiverCountry: \"*\" } } purchase_context { } transaction_context { creation_time { time_in_millis: 1495478491000 } transaction_activity_id: \"19030385910297982\" } } payment_instruction { amount { type: CURRENCY code: \"USD\" coefficient: 1000 exponent: -2 } funding_method: HOLDING backing_instrument { type: STORED_VALUE backing_instrument_id: \"5180205\" stored_value { stored_value_account_id: \"HO-ZA3FXJE7HZ2T4\" currency_code: \"USD\" is_active: true is_primary: true available_balance { type: CURRENCY code: \"USD\" exponent: -2 } last_update { time_in_millis: 1495478492000 } unencrypted_stored_value_id: \"HO5180205\" stored_value_id: \"5180205\" balance_account_id: \"HO-62TQ3GWH5H6SA\" unencrypted_balance_account_id: \"HO5180205\" sub_balances { sub_balance_type: AVAILABLE amount { type: CURRENCY code: \"USD\" coefficient: 1000 exponent: -2 } } legacy_balance_constructs { log_negative_balance: true affects_aggregate: true legal_entity: \"I\" balance_at_time_created { type: CURRENCY code: \"USD\" exponent: -2 } new_collateral_balance { type: CURRENCY code: \"USD\" exponent: -2 } new_pending_reversal_balance { type: CURRENCY code: \"USD\" exponent: -2 } } } } payment_instruction_response { status: APPROVED status_info { payment_instruction_status_info: APPROVED } processor_response { processor_transmission_time { } } instruction_status: SUCCESS } estimated_clearing_date { } instruction_handle: \"6851233176257579118\" tenant_transaction_id: \"19030385910297982:7:FSM\" processor_context { processor_timeout_milliseconds: 19000 } acquirer_context { } type: FINANCIAL_AUTHORIZATION instrument_holder { user_id { account_number: \"1498666816964715798\" email_address: \"abc@jptest.com\" } personal_details { name { first_name: \"Raymond\" last_name: \"Sean\" } address { county: \"US\" } birth_date { } } business_details { legal_entity: INC } jptest_account_details { account_details { account_number: \"1498666816964715798\" type_of_account: PERSONAL account_status: OPEN legal_country: \"US\" tags: IS_VERIFIED disposition: \"OPEN\" fraud_score: \"100000\" subprime: \"0\" } } } counter_party { user_id { } personal_details { name { } address { } } business_details { } } usd_amount { coefficient: 1000 } is_informational: true reference_transaction_id: \"19030385910297984\" facilitator { business_details { business_name: \"jptest\" } } instruction_id: \"73224948c7af40c6b47c3c03b890a91f\" installment_details { } instruction_context { processed_time { } } funding_mode: INSTANT money_movement_id: \"19030385910297988\" } payment_instruction { amount { type: CURRENCY code: \"USD\" coefficient: 1000 exponent: -2 } money_movement_type: DISBURSEMENT intermediary_agent_reference: \"19030385910297982\" instrument_holder { user_id { account_number: \"1498666816964715798\" email_address: \"abc@jptest.com\" } personal_details { name { first_name: \"Raymond\" last_name: \"Sean\" } address { line1: \"2834803 Calista Court #0B\" line2: \"1325299 Elizabeth Court\" city: \"Santa Monica\" state_province: \"CA\" postal_code: \"90401\" country_code: \"US\" county: \"US\" } } business_details { legal_entity: INC } jptest_account_details { account_details { account_number: \"1498666816964715798\" type_of_account: PERSONAL account_status: OPEN legal_country: \"US\" tags: IS_VERIFIED disposition: \"OPEN\" fraud_score: \"100000\" subprime: \"0\" } } } usd_amount { type: CURRENCY code: \"USD\" coefficient: 1000 exponent: -2 } reference_transaction_id: \"19030385910297990\" instruction_id: \"901d8e3438254cf8a2c6c46f0df86189\" ledger_funding { } instruction_context { participant_transaction_id: \"19030385910297982:17:FSM:1\" } disbursement_reason: PAYMENT_RECEIVED ledger_details { ledger: jptest_PAYABLE_GL ledger_type: jptest_PAYABLE_GENERAL_LEDGER ledger_processing_mode: DELAYED } reference_transaction_time { time_in_millis: 1495478491000 } target: LEDGER } } amqp_header { idempotency_key: \"19030385910297982:17:FSM\" facilitator_id: jptest }";

        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(new XMLHelper());
        Method privateMethod = settlementValidationXMLBuilder.getClass().getDeclaredMethod("getXmlFromSpm", String.class);
        privateMethod.setAccessible(true);
        Document result = (Document) privateMethod.invoke(settlementValidationXMLBuilder, simplePaymentMessageString);

        //SettlementValidationXMLBuilder.spmToXmlConverter(simplePaymentMessageString);
    }

    @Test
    public void testJsonToXmlConverter() throws IOException, ParserConfigurationException, TransformerException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String jsonRequestString = "{ \"request_id\": \"19022802724650878:35:FSM\", \"transaction\": { \"id\": \"19022856418563930\", \"activity_id\": 19022802724650878, \"encrypted_id\": \"8C9929852E7253828\", \"reference_id\": 19022802724650878, \"txn_date\": 1494898027, \"amount\": { \"currency_code\": \"USD\", \"amount\": 105 }, \"usd_equiv_amount\": { \"currency_code\": \"USD\", \"amount\": 105 }, \"tenant\": \"TENANT_jptest\", \"activity_type\": \"ACTIVITY_PAY\", \"soft_descriptor\": \"GOOGLE PLAY\", \"merchant_details\": { \"business_name\": \"Google\", \"account_number\": \"1441904986977654890\", \"credit_statement_name\": \"GOOGLE PLAY\", \"seller_name\": \"GOOGLE PLAY\", \"address\": { \"line1\": \"1600 Amphitheater Parkway\", \"city\": \"Mountain View\", \"state_province\": \"CA\", \"postal_code\": \"94043\", \"country_code\": \"US\" } } }, \"money_movement_instruction\": [ { \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_CREDIT\", \"funding_type\": \"FUNDING_TYPE_BALANCE\", \"instructed_amount\": { \"currency_code\": \"USD\", \"amount\": 96 }, \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\", \"legal_entity\": \"I\", \"store_value\": { \"sv_account_identifier\": \"745067033\", \"tenant_account_reference\": \"1441904986977654890\", \"allow_closed_holding\": true, \"allow_negative_balance\": false, \"allow_partial\": false, \"balance\": { \"balance_amount\": { \"currency_code\": \"USD\", \"amount\": 96 }, \"balance_type\": \"BALANCE_TYPE_AVAILABLE\" } }, \"instruction_id\": 19022856418563931, \"participant_transaction_id\": \"19022802724650878:35:FSM:1\" }, { \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_DEBIT\", \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\", \"instruction_id\": 19022856418538910, \"funding_type\": \"FUNDING_TYPE_BANK\", \"bank\": { \"id\": \"309395925\", \"estimated_clearing\": 1495090800, \"processor_id\": \"PROCESSOR_ID_WELLS\", \"routing_entity\": \"ROUTING_ENTITY_UNITED_STATES_PMT_ASSN\", \"bank_account_number_enc\": \"ABcLOdD6IT2c-beH2jL.LAl4epzXY5Vwj5rKJMzDn63VsJRj5nUvBg8D.K2j2i2lBpKn\", \"bank_account_currency_code\": \"USD\", \"account_name\": \"christy quinn\", \"bank_account_type\": \"BANK_ACCOUNT_TYPE_CHECKING\", \"bank_transaction_type\": \"BANK_TRANSACTION_TYPE_IACH\", \"bank_name\": \"JPMORGAN CHASE\", \"routing_number\": \"111000614\", \"bank_country_code\": \"US\", \"mandate\": { \"date_of_signature\": 1487348583 }, \"instrument_holder\": { \"first_name\": \"christy\", \"last_name\": \"quinn\", \"account_number\": \"1724632002945640800\", \"address\": { \"line1\": \"15311 dundas dr\", \"city\": \"Cypress\", \"state_province\": \"TX\", \"postal_code\": \"77429\", \"country_code\": \"US\" }, \"date_of_birth\": 19750807 } }, \"instructed_amount\": { \"currency_code\": \"USD\", \"amount\": 105 }, \"participant_transaction_id\": \"19022802724650878:35:FSM:0\" } ] }";

        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(new XMLHelper());
        Method privateMethod = settlementValidationXMLBuilder.getClass().getDeclaredMethod("getXmlFromJson", String.class);
        privateMethod.setAccessible(true);
        Document result = (Document) privateMethod.invoke(settlementValidationXMLBuilder, jsonRequestString);

    }

    @Test
    public void testJsonToXMLConverter() throws IOException, ParserConfigurationException, TransformerException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String jsonRequestString="{ \"request_id\": \"19024888351243569:29:FSM\", \"transaction\": { \"id\": \"19024957071008287\", \"activity_id\": 19024888351243569, \"encrypted_id\": \"52M046393B192872V\", \"reference_id\": 19024888351243569, \"txn_date\": 1495047439, \"amount\": { \"currency_code\": \"USD\", \"amount\": 3000 }, \"usd_equiv_amount\": { \"currency_code\": \"USD\", \"amount\": 3000 }, \"tenant\": \"TENANT_jptest\", \"activity_type\": \"ACTIVITY_PAY\", \"merchant_details\": { \"address\": { \"country_code\": \"US\", \"line1\": \"157652 Dodd Street\", \"line2\": \"6272 Grow Drive #0\", \"state_province\": \"DC\", \"city\": \"Washington\", \"postal_code\": \"20001\" }, \"email\": \"_sys_aquarium-4455622189200583@jptest.com\", \"account_number\": \"1281156871707820434\", \"business_name\": \"Nguyen Cleaners\", \"credit_statement_name\": \"NGUYENCLEAN\" } }, \"money_movement_instruction\": [ { \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_CREDIT\", \"funding_type\": \"FUNDING_TYPE_BALANCE\", \"instructed_amount\": { \"currency_code\": \"USD\", \"amount\": 2883 }, \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\", \"legal_entity\": \"I\", \"store_value\": { \"sv_account_identifier\": \"2624661\", \"tenant_account_reference\": \"1281156871707820434\", \"allow_closed_holding\": true, \"allow_negative_balance\": false, \"allow_partial\": false, \"balance\": { \"balance_amount\": { \"currency_code\": \"USD\", \"amount\": 2883 }, \"balance_type\": \"BALANCE_TYPE_AVAILABLE\" } }, \"instruction_id\": 19024957071008288, \"participant_transaction_id\": \"19024888351243569:29:FSM:1\" }, { \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_DEBIT\", \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\", \"funding_type\": \"FUNDING_TYPE_BALANCE\", \"store_value\": { \"sv_account_identifier\": \"2624635\", \"tenant_account_reference\": \"1541543457631795876\", \"balance\": { \"balance_amount\": { \"currency_code\": \"USD\", \"amount\": 3000 }, \"balance_type\": \"BALANCE_TYPE_AVAILABLE\" }, \"authorization_id\": \"A77D4DCB-3B32-11E7-9924-74DBD130206D\", \"affects_aggregate\": true, \"allow_negative_balance\": false, \"allow_closed_holding\": true }, \"instructed_amount\": { \"currency_code\": \"USD\", \"amount\": 3000 }, \"legal_entity\": \"I\", \"instruction_id\": 19024957071008287, \"participant_transaction_id\": \"19024888351243569:29:FSM:0\" } ] }";

        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(new XMLHelper());
        Method privateMethod = settlementValidationXMLBuilder.getClass().getDeclaredMethod("getXmlFromJson", String.class);
        privateMethod.setAccessible(true);
        Document result = (Document) privateMethod.invoke(settlementValidationXMLBuilder, jsonRequestString);
    }

    @Test
    public void testJsonToXMLConverter1() throws IOException, ParserConfigurationException, TransformerException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String jsonRequestString = "{\n  \"request_id\": \"19025987863138472:25:FSM\",\n  \"transaction\": {\n    \"id\": \"19025949580818701\",\n    \"activity_id\": 19025987863138472,\n    \"encrypted_id\": \"76C33255TW626433M\",\n    \"reference_id\": 19025987863138472,\n    \"txn_date\": 1495145378,\n    \"amount\": {\n      \"currency_code\": \"USD\",\n      \"amount\": 1000\n    },\n    \"usd_equiv_amount\": {\n      \"currency_code\": \"USD\",\n      \"amount\": 1000\n    },\n    \"tenant\": \"TENANT_jptest\",\n    \"activity_type\": \"ACTIVITY_PAY\",\n    \"soft_descriptor\": \"jptest\",\n    \"merchant_details\": {\n      \"business_name\": \"Special Day Wedding Planners\",\n      \"account_number\": \"2176304061638520307\",\n      \"credit_statement_name\": \"SPECIALDAYW\",\n      \"address\": {\n        \"line1\": \"55463537 Piccadilly Rd - Riverstone\",\n        \"line2\": \"48380428 Hornsey Road - Floreat\",\n        \"city\": \"Melbourne\",\n        \"state_province\": \"Victoria\",\n        \"postal_code\": \"3001\",\n        \"country_code\": \"AU\"\n      }\n    }\n  },\n  \"money_movement_instruction\": [\n    {\n      \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_CREDIT\",\n      \"funding_type\": \"FUNDING_TYPE_BALANCE\",\n      \"instructed_amount\": {\n        \"currency_code\": \"USD\",\n        \"amount\": 990\n      },\n      \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\",\n      \"legal_entity\": \"S\",\n      \"store_value\": {\n        \"sv_account_identifier\": \"3320667\",\n        \"tenant_account_reference\": \"2176304061638520307\",\n        \"allow_closed_holding\": true,\n        \"allow_negative_balance\": false,\n        \"allow_partial\": false,\n        \"balance\": {\n          \"balance_amount\": {\n            \"currency_code\": \"USD\",\n            \"amount\": 990\n          },\n          \"balance_type\": \"BALANCE_TYPE_AVAILABLE\"\n        }\n      },\n      \"instruction_id\": 19025949580818702,\n      \"participant_transaction_id\": \"19025987863138472:25:FSM:1\"\n    },\n    {\n      \"money_movement_type\": \"MONEY_MOVEMENT_TYPE_DEBIT\",\n      \"instruction_type\": \"INSTRUCTION_TYPE_PROCESS\",\n      \"instruction_id\": 19025949580818695,\n      \"funding_type\": \"FUNDING_TYPE_BANK\",\n      \"bank\": {\n        \"id\": \"2631306\",\n        \"estimated_clearing\": 1496041200,\n        \"processor_id\": \"PROCESSOR_ID_DBAG\",\n        \"routing_entity\": \"ROUTING_ENTITY_SINGLE_EUROPE_PMT_ASSN\",\n        \"iban_enc\": \"ABcLOQv.4orUYLUVsWUu6EoxoHCYluuJgLEp1tu.4OnkYGXR72CWpuWUpmxzzfgB247pyrnKwyJWZoyrIDc5h2KL\",\n        \"iban_hmac\": \"ABcLOQv.4orUYLUVsWUu6EoxoHCYluuJgLEp1tu.4OnkYGXR72CWpuWUpmxzzfgB247pyrnKwyJWZoyrIDc5h2KL\",\n        \"bank_account_currency_code\": \"EUR\",\n        \"account_name\": \"Carlos\",\n        \"bank_account_type\": \"BANK_ACCOUNT_TYPE_SAVINGS\",\n        \"bank_transaction_type\": \"BANK_TRANSACTION_TYPE_IACH\",\n        \"bank_name\": \"Rabobank Nederland\",\n        \"routing_number\": \"6458\",\n        \"bic\": \"BKAUATWW\",\n        \"branch_number\": \"6776\",\n        \"branch_location\": \"3521 CB Utrecht NL\",\n        \"bank_country_code\": \"ES\",\n        \"check_digits\": \"64\",\n        \"mandate\": {\n          \"date_of_signature\": 1495145364,\n          \"mandate_reference_number\": \"4Y3J224T5SFT8\"\n        },\n        \"instrument_holder\": {\n          \"first_name\": \"Carlos\",\n          \"last_name\": \"Carmen\",\n          \"account_number\": \"1694291004396795874\",\n          \"address\": {\n            \"line1\": \"Mesonero Romanos 8473879\",\n            \"line2\": \"692094 San Pedro de Alcantara\",\n            \"city\": \"Madrid\",\n            \"state_province\": \"Madrid\",\n            \"postal_code\": \"28012\",\n            \"country_code\": \"ES\"\n          }\n        },\n        \"network_contingency\": \"NETWORK_CONTINGENCY_SEPA_COR1\"\n      },\n      \"instructed_amount\": {\n        \"currency_code\": \"EUR\",\n        \"amount\": 662\n      },\n      \"participant_transaction_id\": \"19025987863138472:25:FSM:0\"\n    }\n  ]\n}\n";

        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(new XMLHelper());
        Method privateMethod = settlementValidationXMLBuilder.getClass().getDeclaredMethod("getXmlFromJson", String.class);
        privateMethod.setAccessible(true);
        Document result = (Document) privateMethod.invoke(settlementValidationXMLBuilder, jsonRequestString);
    }

    @Test(enabled = false)
    public void testGetJsonRequest() throws IOException, SAXException, ParserConfigurationException, TransformerException {
        XMLHelper xmlHelper = new XMLHelper();
        String inputString = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><async_tasks repeating=\"true\" type=\"default-vo-class\"><item typesig=\"0\" type=\"Money::IPNPayDataVO\" id=\"483\"><credit_fee_amount type=\"Currency\">USD71</credit_fee_amount></item><item><type>SETTLEMENT</type><json_request>\"sample\"</json_request></item></async_tasks>";
        Document inputXML = xmlHelper.convertToXmlDocument(inputString);
        Document doc = xmlHelper.getSubsetDocument(inputXML, "//async_tasks/item[type='SETTLEMENT']");
        SettlementValidationXMLBuilder settlementValidationXMLBuilder = new SettlementValidationXMLBuilder(xmlHelper);
        Document jsonOrSpmRequest = settlementValidationXMLBuilder.getJsonOrSpmRequest(doc);
        String jsonRequest = settlementValidationXMLBuilder.getJsonRequest(jsonOrSpmRequest);
        Assert.assertNotNull(jsonRequest);
        Assert.assertNotNull(doc);
    }
}
